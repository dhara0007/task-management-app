{"ast":null,"code":"var _jsxFileName = \"D:\\\\Practice\\\\React-Local\\\\Dhara-Task-Management-React\\\\task-management-app\\\\src\\\\redux\\\\components\\\\AddTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { ListItem, TextField, IconButton } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { addTask } from '../actions';\nimport { ICON_SIZE } from './App';\n\n/**\r\n * Creates new task\r\n * \r\n * @param {Function} addTak Dispatches an action that creates a new task\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTask = _ref => {\n  _s();\n  let {\n    addTask\n  } = _ref;\n  const [inputText, setInputText] = useState('');\n  const inputElement = useRef();\n  const onSubmit = e => {\n    e.preventDefault();\n\n    // Dispatch action that adds new task\n    addTask(inputText);\n\n    // Reset input field and focus it\n    setInputText('');\n    inputElement.current.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    component: \"form\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      edge: \"start\",\n      \"aria-label\": \"create new task\",\n      type: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n        color: \"primary\",\n        fontSize: ICON_SIZE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      ref: inputElement,\n      value: inputText,\n      onChange: e => setInputText(e.target.value),\n      id: \"outlined-basic\",\n      label: \"Task description\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTask, \"coJdzKcS5WP2Lk5Xw8HSewRKlXg=\");\n_c = AddTask;\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTask: text => dispatch(addTask(text))\n  };\n};\nexport default connect(null, mapDispatchToProps)(AddTask);\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["React","useState","useRef","connect","ListItem","TextField","IconButton","AddCircleIcon","addTask","ICON_SIZE","AddTask","inputText","setInputText","inputElement","onSubmit","e","preventDefault","current","focus","target","value","mapDispatchToProps","dispatch","text"],"sources":["D:/Practice/React-Local/Dhara-Task-Management-React/task-management-app/src/redux/components/AddTask.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ListItem, TextField, IconButton } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { addTask } from '../actions';\r\nimport { ICON_SIZE } from './App';\r\n\r\n/**\r\n * Creates new task\r\n * \r\n * @param {Function} addTak Dispatches an action that creates a new task\r\n */\r\nconst AddTask = ({ addTask }) => {\r\n  const [inputText, setInputText] = useState('');\r\n  const inputElement = useRef();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Dispatch action that adds new task\r\n    addTask(inputText);\r\n\r\n    // Reset input field and focus it\r\n    setInputText('');\r\n    inputElement.current.focus();\r\n  }\r\n\r\n  return (\r\n    <ListItem \r\n      component=\"form\"\r\n      onSubmit={onSubmit}\r\n    >\r\n      <IconButton \r\n        edge=\"start\" \r\n        aria-label=\"create new task\"\r\n        type=\"submit\"\r\n      >\r\n        <AddCircleIcon color=\"primary\" fontSize={ICON_SIZE} />\r\n      </IconButton>\r\n      <TextField\r\n        ref={inputElement}\r\n        value={inputText}\r\n        onChange={e => setInputText(e.target.value)}\r\n        id=\"outlined-basic\"\r\n        label=\"Task description\"\r\n        variant=\"outlined\"\r\n        required\r\n        fullWidth\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTask: (text) => dispatch(addTask(text))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTask);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,mBAAmB;AACnE,OAAOC,aAAa,MAAM,8BAA8B;AAExD,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AACA;AACA;AACA;AACA;AAJA;AAKA,MAAMC,OAAO,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEF;EAAQ,CAAC;EAC1B,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMY,YAAY,GAAGX,MAAM,EAAE;EAE7B,MAAMY,QAAQ,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,EAAE;;IAElB;IACAR,OAAO,CAACG,SAAS,CAAC;;IAElB;IACAC,YAAY,CAAC,EAAE,CAAC;IAChBC,YAAY,CAACI,OAAO,CAACC,KAAK,EAAE;EAC9B,CAAC;EAED,oBACE,QAAC,QAAQ;IACP,SAAS,EAAC,MAAM;IAChB,QAAQ,EAAEJ,QAAS;IAAA,wBAEnB,QAAC,UAAU;MACT,IAAI,EAAC,OAAO;MACZ,cAAW,iBAAiB;MAC5B,IAAI,EAAC,QAAQ;MAAA,uBAEb,QAAC,aAAa;QAAC,KAAK,EAAC,SAAS;QAAC,QAAQ,EAAEL;MAAU;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC3C,eACb,QAAC,SAAS;MACR,GAAG,EAAEI,YAAa;MAClB,KAAK,EAAEF,SAAU;MACjB,QAAQ,EAAEI,CAAC,IAAIH,YAAY,CAACG,CAAC,CAACI,MAAM,CAACC,KAAK,CAAE;MAC5C,EAAE,EAAC,gBAAgB;MACnB,KAAK,EAAC,kBAAkB;MACxB,OAAO,EAAC,UAAU;MAClB,QAAQ;MACR,SAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACT;EAAA;IAAA;IAAA;IAAA;EAAA,QACO;AAEf,CAAC;AAAA,GAvCKV,OAAO;AAAA,KAAPA,OAAO;AAyCb,MAAMW,kBAAkB,GAAIC,QAAQ,IAAK;EACvC,OAAO;IACLd,OAAO,EAAGe,IAAI,IAAKD,QAAQ,CAACd,OAAO,CAACe,IAAI,CAAC;EAC3C,CAAC;AACH,CAAC;AAED,eAAepB,OAAO,CAAC,IAAI,EAAEkB,kBAAkB,CAAC,CAACX,OAAO,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}