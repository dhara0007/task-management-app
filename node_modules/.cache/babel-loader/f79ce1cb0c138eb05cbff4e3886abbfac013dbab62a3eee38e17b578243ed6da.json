{"ast":null,"code":"import { ActionTypes } from \"../../redux/constants/ActionTypes\";\nconst TASKS = [{\n  userId: 1,\n  id: 1,\n  text: \"You can create new tasks in the creator above\",\n  completed: false\n}, {\n  userId: 1,\n  id: 2,\n  text: \"Mark tasks as completed by clicking on the checkbox\",\n  completed: false\n}, {\n  userId: 1,\n  id: 3,\n  text: \"Filter tasks in the sidebar on the left\",\n  completed: false\n}, {\n  userId: 1,\n  id: 4,\n  text: \"Delete tasks by clicking on trash icon\",\n  completed: true\n}];\nconst TaskReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : TASKS;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    // Create a new task using the text from the action\n    case ActionTypes.ADD_TASK:\n      return [...state, {\n        id: action.id,\n        text: action.text,\n        completed: false\n      }];\n\n    // Remove the task with the matching id\n    case ActionTypes.REMOVE_TASK:\n      return state.filter(task => task.id !== action.id);\n\n    // Toggle completed state of the task with matching id\n    case ActionTypes.TOGGLE_TASK:\n      return state.map(task => {\n        if (task.id === action.id) {\n          return {\n            ...task,\n            completed: !task.completed\n          };\n        }\n        return task;\n      });\n    default:\n      return state;\n  }\n};\n_c = TaskReducer;\nexport default TaskReducer;\nvar _c;\n$RefreshReg$(_c, \"TaskReducer\");","map":{"version":3,"names":["ActionTypes","TASKS","userId","id","text","completed","TaskReducer","state","action","type","ADD_TASK","REMOVE_TASK","filter","task","TOGGLE_TASK","map"],"sources":["D:/Practice/React-Local/Dhara-Task-Management-React/task-management-app/src/redux/reducer/TaskReducer.js"],"sourcesContent":["import {ActionTypes} from \"../../redux/constants/ActionTypes\"\r\n\r\n  \r\n\r\n  const TASKS = [\r\n    {\r\n      userId: 1,\r\n      id: 1,\r\n      text: \"You can create new tasks in the creator above\",\r\n      completed: false\r\n    },\r\n    {\r\n      userId: 1,\r\n      id: 2,\r\n      text: \"Mark tasks as completed by clicking on the checkbox\",\r\n      completed: false\r\n    },\r\n    {\r\n      userId: 1,\r\n      id: 3,\r\n      text: \"Filter tasks in the sidebar on the left\",\r\n      completed: false\r\n    },\r\n    {\r\n      userId: 1,\r\n      id: 4,\r\n      text: \"Delete tasks by clicking on trash icon\",\r\n      completed: true\r\n    },\r\n  ]\r\n  \r\n  const TaskReducer = (state = TASKS, action) => {\r\n    switch (action.type) {\r\n      // Create a new task using the text from the action\r\n      case ActionTypes.ADD_TASK:\r\n        return [\r\n          ...state,\r\n          {\r\n            id: action.id,\r\n            text: action.text,\r\n            completed: false,\r\n          },\r\n        ];\r\n  \r\n      // Remove the task with the matching id\r\n      case ActionTypes.REMOVE_TASK:\r\n        return state.filter(task => task.id !== action.id);\r\n  \r\n      // Toggle completed state of the task with matching id\r\n      case ActionTypes.TOGGLE_TASK:\r\n        return state.map((task) => {\r\n          if (task.id === action.id) {\r\n            return {\r\n              ...task,\r\n              completed: !task.completed,\r\n            };\r\n          }\r\n          return task;\r\n        });\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default TaskReducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,mCAAmC;AAI3D,MAAMC,KAAK,GAAG,CACZ;EACEC,MAAM,EAAE,CAAC;EACTC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,+CAA+C;EACrDC,SAAS,EAAE;AACb,CAAC,EACD;EACEH,MAAM,EAAE,CAAC;EACTC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,qDAAqD;EAC3DC,SAAS,EAAE;AACb,CAAC,EACD;EACEH,MAAM,EAAE,CAAC;EACTC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,yCAAyC;EAC/CC,SAAS,EAAE;AACb,CAAC,EACD;EACEH,MAAM,EAAE,CAAC;EACTC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,wCAAwC;EAC9CC,SAAS,EAAE;AACb,CAAC,CACF;AAED,MAAMC,WAAW,GAAG,YAA2B;EAAA,IAA1BC,KAAK,uEAAGN,KAAK;EAAA,IAAEO,MAAM;EACxC,QAAQA,MAAM,CAACC,IAAI;IACjB;IACA,KAAKT,WAAW,CAACU,QAAQ;MACvB,OAAO,CACL,GAAGH,KAAK,EACR;QACEJ,EAAE,EAAEK,MAAM,CAACL,EAAE;QACbC,IAAI,EAAEI,MAAM,CAACJ,IAAI;QACjBC,SAAS,EAAE;MACb,CAAC,CACF;;IAEH;IACA,KAAKL,WAAW,CAACW,WAAW;MAC1B,OAAOJ,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACV,EAAE,KAAKK,MAAM,CAACL,EAAE,CAAC;;IAEpD;IACA,KAAKH,WAAW,CAACc,WAAW;MAC1B,OAAOP,KAAK,CAACQ,GAAG,CAAEF,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACV,EAAE,KAAKK,MAAM,CAACL,EAAE,EAAE;UACzB,OAAO;YACL,GAAGU,IAAI;YACPR,SAAS,EAAE,CAACQ,IAAI,CAACR;UACnB,CAAC;QACH;QACA,OAAOQ,IAAI;MACb,CAAC,CAAC;IACJ;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;AAAA,KA/BKD,WAAW;AAiCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}