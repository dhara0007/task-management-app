{"ast":null,"code":"var _jsxFileName = \"D:\\\\Practice\\\\React-Local\\\\Dhara-Task-Management-React\\\\task-management-app\\\\src\\\\redux\\\\components\\\\TaskItem.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton, ListItem, ListItemText, ListItemSecondaryAction } from '@material-ui/core';\nimport { CheckBox, CheckBoxOutlineBlank as CheckBoxBlank, Delete } from '@material-ui/icons';\nimport { green } from '@material-ui/core/colors';\nimport { ICON_SIZE } from '../../App';\n\n/**\r\n * A single task item\r\n *\r\n * @param {Number} id task unique id\r\n * @param {String} text description of the task\r\n * @param {Boolean} completed Task is either completed or not\r\n * @param {Function} onClick Handles clicking on a task and on the checkbox icon\r\n * @param {Function} onDeleteClick Handles clicking on the trash icon\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = _ref => {\n  let {\n    text,\n    completed,\n    onClick,\n    onDeleteClick\n  } = _ref;\n  const handleClick = () => {\n    onClick();\n  };\n  const handleDeleteClick = () => onDeleteClick();\n  const renderCheckboxIcon = () => {\n    if (completed) {\n      // Task is completed - render green checked icon\n      return /*#__PURE__*/_jsxDEV(CheckBox, {\n        style: {\n          color: green[500]\n        },\n        fontSize: ICON_SIZE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n    }\n    // By default render unchecked icon\n    return /*#__PURE__*/_jsxDEV(CheckBoxBlank, {\n      fontSize: ICON_SIZE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  };\n  // console.log(\"TaskItem\",text,completed,onClick,onDeleteClick);\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    button: true,\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      edge: \"start\",\n      children: renderCheckboxIcon()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"delete the task\",\n        onClick: handleDeleteClick,\n        children: /*#__PURE__*/_jsxDEV(Delete, {\n          color: \"secondary\",\n          fontSize: ICON_SIZE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskItem;\nTaskItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n};\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","PropTypes","IconButton","ListItem","ListItemText","ListItemSecondaryAction","CheckBox","CheckBoxOutlineBlank","CheckBoxBlank","Delete","green","ICON_SIZE","TaskItem","text","completed","onClick","onDeleteClick","handleClick","handleDeleteClick","renderCheckboxIcon","color","propTypes","func","isRequired","bool","string"],"sources":["D:/Practice/React-Local/Dhara-Task-Management-React/task-management-app/src/redux/components/TaskItem.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n} from '@material-ui/core';\r\nimport {\r\n  CheckBox,\r\n  CheckBoxOutlineBlank as CheckBoxBlank,\r\n  Delete,\r\n} from '@material-ui/icons';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport { ICON_SIZE } from '../../App';\r\n\r\n/**\r\n * A single task item\r\n *\r\n * @param {Number} id task unique id\r\n * @param {String} text description of the task\r\n * @param {Boolean} completed Task is either completed or not\r\n * @param {Function} onClick Handles clicking on a task and on the checkbox icon\r\n * @param {Function} onDeleteClick Handles clicking on the trash icon\r\n */\r\nconst TaskItem = ({\r\n  text,\r\n  completed,\r\n  onClick,\r\n  onDeleteClick\r\n}) => {\r\n  const handleClick = () => {\r\n    onClick()\r\n  };\r\n  const handleDeleteClick = () => onDeleteClick();\r\n\r\n  const renderCheckboxIcon = () => {\r\n    if (completed) {\r\n      // Task is completed - render green checked icon\r\n      return <CheckBox style={{ color: green[500] }} fontSize={ICON_SIZE} />\r\n    }\r\n    // By default render unchecked icon\r\n    return <CheckBoxBlank fontSize={ICON_SIZE} />\r\n  }\r\n// console.log(\"TaskItem\",text,completed,onClick,onDeleteClick);\r\n  return (\r\n    <ListItem button onClick={handleClick}>\r\n      <IconButton edge=\"start\">\r\n        {renderCheckboxIcon()}\r\n      </IconButton>\r\n      <ListItemText primary={text} />\r\n      <ListItemSecondaryAction>\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"delete the task\"\r\n          onClick={handleDeleteClick}\r\n        >\r\n          <Delete color=\"secondary\" fontSize={ICON_SIZE} />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\nTaskItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  onDeleteClick: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SACEC,UAAU,EACVC,QAAQ,EACRC,YAAY,EACZC,uBAAuB,QAClB,mBAAmB;AAC1B,SACEC,QAAQ,EACRC,oBAAoB,IAAIC,aAAa,EACrCC,MAAM,QACD,oBAAoB;AAC3B,SAASC,KAAK,QAAQ,0BAA0B;AAEhD,SAASC,SAAS,QAAQ,WAAW;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA,MAAMC,QAAQ,GAAG,QAKX;EAAA,IALY;IAChBC,IAAI;IACJC,SAAS;IACTC,OAAO;IACPC;EACF,CAAC;EACC,MAAMC,WAAW,GAAG,MAAM;IACxBF,OAAO,EAAE;EACX,CAAC;EACD,MAAMG,iBAAiB,GAAG,MAAMF,aAAa,EAAE;EAE/C,MAAMG,kBAAkB,GAAG,MAAM;IAC/B,IAAIL,SAAS,EAAE;MACb;MACA,oBAAO,QAAC,QAAQ;QAAC,KAAK,EAAE;UAAEM,KAAK,EAAEV,KAAK,CAAC,GAAG;QAAE,CAAE;QAAC,QAAQ,EAAEC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG;IACxE;IACA;IACA,oBAAO,QAAC,aAAa;MAAC,QAAQ,EAAEA;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAC/C,CAAC;EACH;EACE,oBACE,QAAC,QAAQ;IAAC,MAAM;IAAC,OAAO,EAAEM,WAAY;IAAA,wBACpC,QAAC,UAAU;MAAC,IAAI,EAAC,OAAO;MAAA,UACrBE,kBAAkB;IAAE;MAAA;MAAA;MAAA;IAAA,QACV,eACb,QAAC,YAAY;MAAC,OAAO,EAAEN;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/B,QAAC,uBAAuB;MAAA,uBACtB,QAAC,UAAU;QACT,IAAI,EAAC,KAAK;QACV,cAAW,iBAAiB;QAC5B,OAAO,EAAEK,iBAAkB;QAAA,uBAE3B,QAAC,MAAM;UAAC,KAAK,EAAC,WAAW;UAAC,QAAQ,EAAEP;QAAU;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IACtC;MAAA;MAAA;MAAA;IAAA,QACW;EAAA;IAAA;IAAA;IAAA;EAAA,QACjB;AAEf,CAAC;AAAC,KArCIC,QAAQ;AAsCdA,QAAQ,CAACS,SAAS,GAAG;EACnBN,OAAO,EAAEd,SAAS,CAACqB,IAAI,CAACC,UAAU;EAClCP,aAAa,EAAEf,SAAS,CAACqB,IAAI,CAACC,UAAU;EACxCT,SAAS,EAAEb,SAAS,CAACuB,IAAI,CAACD,UAAU;EACpCV,IAAI,EAAEZ,SAAS,CAACwB,MAAM,CAACF;AACzB,CAAC;AAED,eAAeX,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}