{"ast":null,"code":"var _jsxFileName = \"D:\\\\Practice\\\\React-Local\\\\Dhara-Task-Management-React\\\\task-management-app\\\\src\\\\redux\\\\components\\\\AddTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { ListItem, TextField, IconButton } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { AddTaskAction } from '../actions/AddTaskAction';\nimport { ICON_SIZE } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTask = _ref => {\n  _s();\n  let {\n    AddTaskAction\n  } = _ref;\n  const [inputTextName, setInputTextName] = useState('');\n  const [inputTextDescription, setInputTextDescription] = useState('');\n  const values = {\n    someDate: new Date().toISOString().substring(0, 10)\n  };\n  const [inputTextDate, setInputTextDate] = React.useState(values.someDate);\n  const inputElement = useRef();\n  const onSubmit = e => {\n    e.preventDefault();\n    AddTaskAction(inputTextName, inputTextDescription, inputTextDate);\n    setInputTextName('');\n    setInputTextDescription('');\n    setInputTextDate(values.someDate);\n    inputElement.current.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    component: \"form\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      edge: \"start\",\n      \"aria-label\": \"create new task\",\n      type: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n        color: \"primary\",\n        fontSize: ICON_SIZE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      ref: inputElement,\n      value: inputTextName,\n      onChange: e => setInputTextName(e.target.value),\n      id: \"outlined-basic\",\n      label: \"Task Name\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      ref: inputElement,\n      value: inputTextDescription,\n      onChange: e => setInputTextDescription(e.target.value),\n      id: \"outlined-basic\",\n      label: \"Task Description\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      ref: inputElement,\n      value: inputTextDate,\n      onChange: e => setInputTextDate(e.target.value),\n      id: \"outlined-basic\",\n      label: \"Deadline\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      type: \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTask, \"pXWC6yNsitPz1LeaJwL2N06Lmac=\");\n_c = AddTask;\nconst mapDispatchToProps = dispatch => {\n  return {\n    AddTaskAction: (name, description, duedate) => dispatch(AddTaskAction(name, description, duedate))\n  };\n};\nexport default connect(null, mapDispatchToProps)(AddTask);\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["React","useState","useRef","connect","ListItem","TextField","IconButton","AddCircleIcon","AddTaskAction","ICON_SIZE","AddTask","inputTextName","setInputTextName","inputTextDescription","setInputTextDescription","values","someDate","Date","toISOString","substring","inputTextDate","setInputTextDate","inputElement","onSubmit","e","preventDefault","current","focus","target","value","mapDispatchToProps","dispatch","name","description","duedate"],"sources":["D:/Practice/React-Local/Dhara-Task-Management-React/task-management-app/src/redux/components/AddTask.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ListItem, TextField, IconButton } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { AddTaskAction } from '../actions/AddTaskAction';\r\nimport { ICON_SIZE } from '../../App';\r\n\r\nconst AddTask = ({ AddTaskAction }) => {\r\n  const [inputTextName, setInputTextName] = useState('');\r\n  const [inputTextDescription, setInputTextDescription] = useState('');\r\n  const values = {\r\n    someDate: new Date().toISOString().substring(0, 10)\r\n  };\r\n  const [inputTextDate, setInputTextDate] = React.useState(values.someDate);\r\n  const inputElement = useRef();\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    AddTaskAction(inputTextName,inputTextDescription,inputTextDate);\r\n    setInputTextName('');\r\n    setInputTextDescription('');\r\n    setInputTextDate(values.someDate);\r\n    inputElement.current.focus();\r\n  }\r\n\r\n  return (\r\n    <ListItem \r\n      component=\"form\"\r\n      onSubmit={onSubmit}>\r\n      <IconButton \r\n        edge=\"start\" \r\n        aria-label=\"create new task\"\r\n        type=\"submit\">\r\n        <AddCircleIcon color=\"primary\" fontSize={ICON_SIZE} />\r\n      </IconButton>\r\n      <TextField\r\n        ref={inputElement}\r\n        value={inputTextName}\r\n        onChange={e => setInputTextName(e.target.value)}\r\n        id=\"outlined-basic\"\r\n        label=\"Task Name\"\r\n        variant=\"outlined\"\r\n        required\r\n        fullWidth/>\r\n      <TextField\r\n        ref={inputElement}\r\n        value={inputTextDescription}\r\n        onChange={e => setInputTextDescription(e.target.value)}\r\n        id=\"outlined-basic\"\r\n        label=\"Task Description\"\r\n        variant=\"outlined\"\r\n        required\r\n        fullWidth/>\r\n      <TextField\r\n      ref={inputElement}\r\n      value={inputTextDate}\r\n      onChange={e => setInputTextDate(e.target.value)}\r\n      id=\"outlined-basic\"\r\n      label=\"Deadline\"\r\n      variant=\"outlined\"\r\n      required\r\n      fullWidth\r\n      type=\"date\"/>\r\n    </ListItem>\r\n\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    AddTaskAction: (name,description,duedate) => dispatch(AddTaskAction(name,description,duedate))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTask);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}