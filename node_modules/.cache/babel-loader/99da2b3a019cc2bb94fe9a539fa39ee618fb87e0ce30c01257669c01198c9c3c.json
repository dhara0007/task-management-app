{"ast":null,"code":"var _jsxFileName = \"D:\\\\Practice\\\\React-Local\\\\Dhara-Task-Management-React\\\\task-management-app\\\\src\\\\redux\\\\components\\\\TaskList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport TaskItem from './TaskItem';\n\n/**\r\n * Lists given array of tasks\r\n *\r\n * @param {Array} tasks An array with all the tasks to display\r\n * @param {Function} onTaskClick Toggles completed state (true/false)\r\n * @param {Function} onTaskDeleteClick Deletes the task\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = _ref => {\n  let {\n    tasks,\n    onTaskClick,\n    onTaskDeleteClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: tasks\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this)\n  // <List>\n  //   {tasks.map((task) => {\n  //     return (\n  //       <TaskItem\n  //         key={task.id}\n  //         {...task}\n  //         onClick={() => onTaskClick(task.id)}\n  //         onDeleteClick={() => onTaskDeleteClick(task.id)}\n  //       />\n  //     );\n  //   })}\n  // </List>\n  ;\n};\n_c = TaskList;\nTaskList.propTypes = {\n  tasks: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  onTaskClick: PropTypes.func.isRequired,\n  onTaskDeleteClick: PropTypes.func.isRequired\n};\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","PropTypes","List","TaskItem","TaskList","tasks","onTaskClick","onTaskDeleteClick","propTypes","arrayOf","shape","id","number","isRequired","completed","bool","text","string","func"],"sources":["D:/Practice/React-Local/Dhara-Task-Management-React/task-management-app/src/redux/components/TaskList.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport TaskItem from './TaskItem';\r\n\r\n/**\r\n * Lists given array of tasks\r\n *\r\n * @param {Array} tasks An array with all the tasks to display\r\n * @param {Function} onTaskClick Toggles completed state (true/false)\r\n * @param {Function} onTaskDeleteClick Deletes the task\r\n */\r\nconst TaskList = ({ tasks, onTaskClick, onTaskDeleteClick }) => \r\n(\r\n  <List>\r\n    {tasks}\r\n  </List>\r\n  // <List>\r\n  //   {tasks.map((task) => {\r\n  //     return (\r\n  //       <TaskItem\r\n  //         key={task.id}\r\n  //         {...task}\r\n  //         onClick={() => onTaskClick(task.id)}\r\n  //         onDeleteClick={() => onTaskDeleteClick(task.id)}\r\n  //       />\r\n  //     );\r\n  //   })}\r\n  // </List>\r\n);\r\n\r\nTaskList.propTypes = {\r\n  tasks: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      completed: PropTypes.bool.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onTaskClick: PropTypes.func.isRequired,\r\n  onTaskDeleteClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA,MAAMC,QAAQ,GAAG;EAAA,IAAC;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAkB,CAAC;EAAA,oBAEzD,QAAC,IAAI;IAAA,UACFF;EAAK;IAAA;IAAA;IAAA;EAAA;EAER;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAAA,CACD;AAAC,KAjBID,QAAQ;AAmBdA,QAAQ,CAACI,SAAS,GAAG;EACnBH,KAAK,EAAEJ,SAAS,CAACQ,OAAO,CACtBR,SAAS,CAACS,KAAK,CAAC;IACdC,EAAE,EAAEV,SAAS,CAACW,MAAM,CAACC,UAAU;IAC/BC,SAAS,EAAEb,SAAS,CAACc,IAAI,CAACF,UAAU;IACpCG,IAAI,EAAEf,SAAS,CAACgB,MAAM,CAACJ;EACzB,CAAC,CAAC,CAACA,UAAU,CACd,CAACA,UAAU;EACZP,WAAW,EAAEL,SAAS,CAACiB,IAAI,CAACL,UAAU;EACtCN,iBAAiB,EAAEN,SAAS,CAACiB,IAAI,CAACL;AACpC,CAAC;AAED,eAAeT,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}