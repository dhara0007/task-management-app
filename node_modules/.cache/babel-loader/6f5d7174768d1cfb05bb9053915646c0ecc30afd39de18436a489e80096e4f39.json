{"ast":null,"code":"var _jsxFileName = \"D:\\\\Practice\\\\React-Local\\\\Dhara-Task-Management-React\\\\task-management-app\\\\src\\\\redux\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton, ListItem, ListItemText, ListItemSecondaryAction } from '@material-ui/core';\nimport { Info, CheckBoxOutlineBlank as CheckBoxBlank, Delete, Mail, ExpandLess, ExpandMore, StarBorder } from '@material-ui/icons';\nimport { green } from '@material-ui/core/colors';\nimport { ICON_SIZE } from '../../App';\nimport List from '@material-ui/core/List';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\n\n//import DetailsTask from './DetailsTask';\n//import ListItemButton from '@mui/material/ListItemButton';\n//import ListItemIcon from '@mui/material/ListItemIcon';\n\n//import InboxIcon from '@mui/icons-material/MoveToInbox';\n//import ExpandLess from '@mui/icons-material/ExpandLess';\n//import ExpandMore from '@mui/icons-material/ExpandMore';\n//import StarBorder from '@mui/icons-material/StarBorder';\n\n/**\r\n * A single task item\r\n *\r\n * @param {Number} id task unique id\r\n * @param {String} text description of the task\r\n * @param {Boolean} completed Task is either completed or not\r\n * @param {Function} onClick Handles clicking on a task and on the checkbox icon\r\n * @param {Function} onDeleteClick Handles clicking on the trash icon\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = _ref => {\n  _s();\n  let {\n    name,\n    description,\n    duedate,\n    onClick,\n    onDeleteClick\n  } = _ref;\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    },\n    nested: {\n      paddingLeft: theme.spacing(4)\n    }\n  }));\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleClickOpen = () => {\n    setOpen(!open);\n  };\n  const handleClick = () => {\n    onClick();\n    console.log(\"handleClick\");\n  };\n  const handleDeleteClick = () => onDeleteClick();\n  const renderCheckboxIcon = () => {\n    return /*#__PURE__*/_jsxDEV(Info, {\n      style: {\n        color: green[500]\n      },\n      fontSize: ICON_SIZE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n    //<Info style={{ color: green[500] }} fontSize={ICON_SIZE} />\n    //<button><Link to={`/d`}>Buy Now</Link></button>;\n    // if (completed) {\n    //   // Task is completed - render green checked icon\n    //   return <CheckBox style={{ color: green[500] }} fontSize={ICON_SIZE} />\n    // }\n    // // By default render unchecked icon\n    // return <CheckBoxBlank fontSize={ICON_SIZE} />\n  };\n  //console.log(\"TaskItem\",text,completed,onClick,onDeleteClick);\n\n  console.log(\"TaskItem\", name, description, duedate);\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    button: true,\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      onClick: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: \"Inbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), open ? /*#__PURE__*/_jsxDEV(ExpandLess, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: open,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        component: \"div\",\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          className: classes.nested,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(StarBorder, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Starred\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      style: {\n        textAlign: \"center\"\n      },\n      primary: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      style: {\n        textAlign: \"center\"\n      },\n      primary: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      style: {\n        textAlign: \"center\"\n      },\n      primary: duedate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"delete the task\",\n        onClick: handleDeleteClick,\n        children: /*#__PURE__*/_jsxDEV(Delete, {\n          color: \"secondary\",\n          fontSize: ICON_SIZE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"ZbauVcu/I6GQoZvFWe0/Vd1mXmg=\", true);\n_c = TaskItem;\nTaskItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  //completed: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  duedate: PropTypes.string.isRequired\n};\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","PropTypes","IconButton","ListItem","ListItemText","ListItemSecondaryAction","Info","CheckBoxOutlineBlank","CheckBoxBlank","Delete","Mail","ExpandLess","ExpandMore","StarBorder","green","ICON_SIZE","List","Collapse","ListItemIcon","InboxIcon","TaskItem","name","description","duedate","onClick","onDeleteClick","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","classes","open","setOpen","useState","handleClickOpen","handleClick","console","log","handleDeleteClick","renderCheckboxIcon","color","textAlign","propTypes","func","isRequired","string"],"sources":["D:/Practice/React-Local/Dhara-Task-Management-React/task-management-app/src/redux/components/TaskItem.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction\r\n} from '@material-ui/core';\r\nimport {\r\n  Info,\r\n  CheckBoxOutlineBlank as CheckBoxBlank,\r\n  Delete,\r\n  Mail,\r\n  ExpandLess,\r\n  ExpandMore,\r\n  StarBorder\r\n  \r\n} from '@material-ui/icons';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { ICON_SIZE } from '../../App';\r\nimport List from '@material-ui/core/List';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\n\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\n\r\n\r\n\r\n//import DetailsTask from './DetailsTask';\r\n//import ListItemButton from '@mui/material/ListItemButton';\r\n//import ListItemIcon from '@mui/material/ListItemIcon';\r\n\r\n//import InboxIcon from '@mui/icons-material/MoveToInbox';\r\n//import ExpandLess from '@mui/icons-material/ExpandLess';\r\n//import ExpandMore from '@mui/icons-material/ExpandMore';\r\n//import StarBorder from '@mui/icons-material/StarBorder';\r\n\r\n/**\r\n * A single task item\r\n *\r\n * @param {Number} id task unique id\r\n * @param {String} text description of the task\r\n * @param {Boolean} completed Task is either completed or not\r\n * @param {Function} onClick Handles clicking on a task and on the checkbox icon\r\n * @param {Function} onDeleteClick Handles clicking on the trash icon\r\n */\r\nconst TaskItem = ({\r\n  name,\r\n  description,\r\n  duedate,\r\n  onClick,\r\n  onDeleteClick\r\n}) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(true);\r\n\r\nconst handleClickOpen = () => {\r\n  setOpen(!open);\r\n};\r\n\r\n  const handleClick = () => {\r\n    onClick()\r\n    \r\n    console.log(\"handleClick\");\r\n  };\r\n  const handleDeleteClick = () => onDeleteClick();\r\n\r\n  const renderCheckboxIcon = () => {\r\n     return <Info style={{ color: green[500] }} fontSize={ICON_SIZE} />\r\n     //<Info style={{ color: green[500] }} fontSize={ICON_SIZE} />\r\n     //<button><Link to={`/d`}>Buy Now</Link></button>;\r\n    // if (completed) {\r\n    //   // Task is completed - render green checked icon\r\n    //   return <CheckBox style={{ color: green[500] }} fontSize={ICON_SIZE} />\r\n    // }\r\n    // // By default render unchecked icon\r\n    // return <CheckBoxBlank fontSize={ICON_SIZE} />\r\n }\r\n//console.log(\"TaskItem\",text,completed,onClick,onDeleteClick);\r\n  \r\n\r\n\r\nconsole.log(\"TaskItem\",name,description,duedate);\r\n  return (\r\n    <ListItem button onClick={handleClick}>\r\n      \r\n      <ListItem button onClick={handleClick}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Inbox\" />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <ListItem button className={classes.nested}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Starred\" />\r\n          </ListItem>\r\n\t\t  </List>\r\n      </Collapse>\r\n\r\n      <ListItemText style={{textAlign: \"center\"}}  primary={name} />\r\n      <ListItemText style={{textAlign: \"center\"}}  primary={description} />\r\n      <ListItemText style={{textAlign: \"center\"}} primary={duedate} />\r\n      <ListItemSecondaryAction >\r\n        <IconButton\r\n        \r\n          edge=\"end\"\r\n          aria-label=\"delete the task\"\r\n          onClick={handleDeleteClick}\r\n        >\r\n          <Delete color=\"secondary\" fontSize={ICON_SIZE} />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n    \r\n  );\r\n};\r\nTaskItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  onDeleteClick: PropTypes.func.isRequired,\r\n  //completed: PropTypes.bool.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  description:PropTypes.string.isRequired,\r\n  duedate:PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}