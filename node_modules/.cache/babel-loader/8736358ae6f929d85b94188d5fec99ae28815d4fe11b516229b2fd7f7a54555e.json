{"ast":null,"code":"var _jsxFileName = \"D:\\\\Practice\\\\React-Local\\\\Dhara-Task-Management-React\\\\task-management-app\\\\src\\\\redux\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton, ListItem, ListItemText, ListItemSecondaryAction, List } from '@material-ui/core';\nimport { Info, CheckBoxOutlineBlank as CheckBoxBlank, Delete, Mail, ExpandLess, ExpandMore, StarBorder } from '@material-ui/icons';\nimport { green } from '@material-ui/core/colors';\nimport { ICON_SIZE } from '../../App';\n//import List from '@material-ui/core/List';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\n\n/**\r\n * A single task item\r\n *\r\n * @param {Number} id task unique id\r\n * @param {String} text description of the task\r\n * @param {Boolean} completed Task is either completed or not\r\n * @param {Function} onClick Handles clicking on a task and on the checkbox icon\r\n * @param {Function} onDeleteClick Handles clicking on the trash icon\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = _ref => {\n  _s();\n  let {\n    name,\n    description,\n    duedate,\n    onClick,\n    onDeleteClick\n  } = _ref;\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(!open);\n  };\n  const handleClick = () => {\n    onClick();\n    console.log(\"handleClick\");\n  };\n  const handleDeleteClick = () => onDeleteClick();\n  const renderCheckboxIcon = () => {\n    return /*#__PURE__*/_jsxDEV(Info, {\n      style: {\n        color: green[500]\n      },\n      fontSize: ICON_SIZE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  };\n  console.log(\"TaskItem\", name, description, duedate);\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    button: true,\n    onClick: handleClickOpen,\n    children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: name,\n      style: {\n        textAlign: \"center\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: open,\n      style: {\n        textAlign: \"center\"\n      },\n      timeout: \"auto\",\n      unmountOnExit: true,\n      children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: duedate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"delete the task\",\n        onClick: handleDeleteClick,\n        children: /*#__PURE__*/_jsxDEV(Delete, {\n          color: \"secondary\",\n          fontSize: ICON_SIZE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = TaskItem;\nTaskItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  //completed: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  duedate: PropTypes.string.isRequired\n};\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","PropTypes","IconButton","ListItem","ListItemText","ListItemSecondaryAction","List","Info","CheckBoxOutlineBlank","CheckBoxBlank","Delete","Mail","ExpandLess","ExpandMore","StarBorder","green","ICON_SIZE","Collapse","ListItemIcon","InboxIcon","TaskItem","name","description","duedate","onClick","onDeleteClick","open","setOpen","useState","handleClickOpen","handleClick","console","log","handleDeleteClick","renderCheckboxIcon","color","textAlign","propTypes","func","isRequired","string"],"sources":["D:/Practice/React-Local/Dhara-Task-Management-React/task-management-app/src/redux/components/TaskItem.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  List\r\n} from '@material-ui/core';\r\nimport {\r\n  Info,\r\n  CheckBoxOutlineBlank as CheckBoxBlank,\r\n  Delete,\r\n  Mail,\r\n  ExpandLess,\r\n  ExpandMore,\r\n  StarBorder\r\n  \r\n} from '@material-ui/icons';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { ICON_SIZE } from '../../App';\r\n//import List from '@material-ui/core/List';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\n\r\n\r\n\r\n/**\r\n * A single task item\r\n *\r\n * @param {Number} id task unique id\r\n * @param {String} text description of the task\r\n * @param {Boolean} completed Task is either completed or not\r\n * @param {Function} onClick Handles clicking on a task and on the checkbox icon\r\n * @param {Function} onDeleteClick Handles clicking on the trash icon\r\n */\r\n\r\nconst TaskItem = ({\r\n  name,\r\n  description,\r\n  duedate,\r\n  onClick,\r\n  onDeleteClick\r\n}) => {\r\nconst [open, setOpen] = React.useState(false);\r\nconst handleClickOpen = () => {\r\n  setOpen(!open);\r\n};\r\n\r\n  const handleClick = () => {\r\n    onClick()\r\n    \r\n    console.log(\"handleClick\");\r\n  };\r\n  const handleDeleteClick = () => onDeleteClick();\r\n\r\n  const renderCheckboxIcon = () => {\r\n     return <Info style={{ color: green[500] }} fontSize={ICON_SIZE} />\r\n }\r\n  \r\nconsole.log(\"TaskItem\",name,description,duedate);\r\n  return (\r\n    <ListItem button onClick={handleClickOpen}> \r\n      <ListItemText primary={name} style={{textAlign: \"center\"}} />\r\n      <Collapse in={open} style={{textAlign: \"center\"}} timeout=\"auto\" unmountOnExit>  \r\n      <ListItemText primary={description} />\r\n      <ListItemText></ListItemText>\r\n\r\n      <ListItemText primary={duedate} /> \r\n      </Collapse>\r\n      <ListItemText></ListItemText>\r\n      <ListItemSecondaryAction >\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"delete the task\"\r\n          onClick={handleDeleteClick}\r\n        >\r\n          <Delete color=\"secondary\" fontSize={ICON_SIZE} />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n    \r\n  );\r\n};\r\nTaskItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  onDeleteClick: PropTypes.func.isRequired,\r\n  //completed: PropTypes.bool.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  description:PropTypes.string.isRequired,\r\n  duedate:PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}