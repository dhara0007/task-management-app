{"ast":null,"code":"import { ActionTypes } from \"../../redux/constants/ActionTypes\";\nimport TaskData from '../../database/TaskData';\nconst TASKS = TaskData;\nconst TaskReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : TASKS;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"TaskReducer\", state, TASKS, action);\n  switch (action.type) {\n    // Create a new task using the text from the action\n    case ActionTypes.ADD_TASK:\n      return [...state, {\n        id: action.id,\n        name: action.name,\n        description: action.description,\n        toDo: true,\n        inProgress: false,\n        done: false\n      }];\n\n    // Remove the task with the matching id\n    case ActionTypes.REMOVE_TASK:\n      return state.filter(task => task.id !== action.id);\n\n    // Toggle completed state of the task with matching id\n    // case ActionTypes.TOGGLE_TASK:\n    //   return state.map((task) => {\n    //     if (task.id === action.id) {\n    //       return {\n    //         ...task,\n    //         completed: !task.completed,\n    //       };\n    //     }\n    //     return task;\n    //   });\n    default:\n      return state;\n  }\n};\n_c = TaskReducer;\nexport default TaskReducer;\nvar _c;\n$RefreshReg$(_c, \"TaskReducer\");","map":{"version":3,"names":["ActionTypes","TaskData","TASKS","TaskReducer","state","action","console","log","type","ADD_TASK","id","name","description","toDo","inProgress","done","REMOVE_TASK","filter","task"],"sources":["D:/Practice/React-Local/Dhara-Task-Management-React/task-management-app/src/redux/reducer/TaskReducer.js"],"sourcesContent":["import {ActionTypes} from \"../../redux/constants/ActionTypes\"\r\nimport TaskData from '../../database/TaskData'\r\n\r\n\r\n  const TASKS = TaskData;\r\n  const TaskReducer = (state = TASKS, action) => {\r\n    console.log(\"TaskReducer\",state,TASKS,action);\r\n    switch (action.type) {\r\n      // Create a new task using the text from the action\r\n      case ActionTypes.ADD_TASK:\r\n        return [\r\n          ...state,\r\n          {\r\n            id: action.id,\r\n            name: action.name,\r\n            description: action.description,\r\n            toDo: true,\r\n            inProgress:false,\r\n            done:false\r\n          },\r\n        ];\r\n  \r\n      // Remove the task with the matching id\r\n      case ActionTypes.REMOVE_TASK:\r\n        return state.filter(task => task.id !== action.id);\r\n  \r\n      // Toggle completed state of the task with matching id\r\n      // case ActionTypes.TOGGLE_TASK:\r\n      //   return state.map((task) => {\r\n      //     if (task.id === action.id) {\r\n      //       return {\r\n      //         ...task,\r\n      //         completed: !task.completed,\r\n      //       };\r\n      //     }\r\n      //     return task;\r\n      //   });\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default TaskReducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,mCAAmC;AAC7D,OAAOC,QAAQ,MAAM,yBAAyB;AAG5C,MAAMC,KAAK,GAAGD,QAAQ;AACtB,MAAME,WAAW,GAAG,YAA2B;EAAA,IAA1BC,KAAK,uEAAGF,KAAK;EAAA,IAAEG,MAAM;EACxCC,OAAO,CAACC,GAAG,CAAC,aAAa,EAACH,KAAK,EAACF,KAAK,EAACG,MAAM,CAAC;EAC7C,QAAQA,MAAM,CAACG,IAAI;IACjB;IACA,KAAKR,WAAW,CAACS,QAAQ;MACvB,OAAO,CACL,GAAGL,KAAK,EACR;QACEM,EAAE,EAAEL,MAAM,CAACK,EAAE;QACbC,IAAI,EAAEN,MAAM,CAACM,IAAI;QACjBC,WAAW,EAAEP,MAAM,CAACO,WAAW;QAC/BC,IAAI,EAAE,IAAI;QACVC,UAAU,EAAC,KAAK;QAChBC,IAAI,EAAC;MACP,CAAC,CACF;;IAEH;IACA,KAAKf,WAAW,CAACgB,WAAW;MAC1B,OAAOZ,KAAK,CAACa,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKL,MAAM,CAACK,EAAE,CAAC;;IAEpD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;AAAA,KAnCKD,WAAW;AAqCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}